// <auto-generated />
using System;
using APIControlEscolar.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIControlEscolar.Migrations
{
    [DbContext(typeof(CONTROL_ESCOLAR))]
    [Migration("20250715062011_UpdateGrupoV2")]
    partial class UpdateGrupoV2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIControlEscolar.Models.Alumno", b =>
                {
                    b.Property<int>("IdAlumno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlumno"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CarreraIdCarrera")
                        .HasColumnType("int");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoAlumno")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Activo");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Genero")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int>("IdCarrera")
                        .HasColumnType("int");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdGrado")
                        .HasColumnType("int");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int");

                    b.Property<int>("IdPeriodo")
                        .HasColumnType("int");

                    b.Property<int>("IdTurno")
                        .HasColumnType("int");

                    b.Property<string>("ImageAlumno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdAlumno");

                    b.HasIndex("CarreraIdCarrera");

                    b.HasIndex("IdCarrera");

                    b.HasIndex("IdGrado");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("Matricula")
                        .IsUnique();

                    b.ToTable("ALUMNO", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Asistencia", b =>
                {
                    b.Property<int>("IdAsistencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsistencia"));

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAlumno")
                        .HasColumnType("int");

                    b.Property<int>("IdToken")
                        .HasColumnType("int");

                    b.HasKey("IdAsistencia");

                    b.HasIndex("IdAlumno");

                    b.HasIndex("IdToken");

                    b.ToTable("Asistencia", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.AsistenciaToken", b =>
                {
                    b.Property<int>("IdToken")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdToken"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<int>("IdMaestro")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdToken");

                    b.HasIndex("IdMaestro");

                    b.ToTable("Asistencia_Token", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Bitacora", b =>
                {
                    b.Property<int>("IdHistorialAccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorialAccion"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("FechaAccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdHistorialAccion");

                    b.ToTable("BITACORA", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Calificacione", b =>
                {
                    b.Property<int>("IdCalificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCalificacion"));

                    b.Property<decimal?>("CalificacionFinal")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(10,6)")
                        .HasComputedColumnSql("(([CalificacionParcial1] + [CalificacionParcial2] + [CalificacionParcial3]) / 3)", true);

                    b.Property<decimal?>("CalificacionParcial1")
                        .HasColumnType("decimal(3,1)");

                    b.Property<decimal?>("CalificacionParcial2")
                        .HasColumnType("decimal(3,1)");

                    b.Property<decimal?>("CalificacionParcial3")
                        .HasColumnType("decimal(3,1)");

                    b.Property<DateTime?>("Fecha_Registro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_REGISTRO")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdAlumno")
                        .HasColumnType("int");

                    b.Property<int>("IdMaestro")
                        .HasColumnType("int");

                    b.Property<int>("IdMateria")
                        .HasColumnType("int");

                    b.Property<int>("IdPeriodo")
                        .HasColumnType("int");

                    b.HasKey("IdCalificacion");

                    b.ToTable("CALIFICACIONE", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Carrera", b =>
                {
                    b.Property<int>("IdCarrera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarrera"));

                    b.Property<string>("NombreCarrera")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdCarrera");

                    b.HasIndex("NombreCarrera")
                        .IsUnique();

                    b.ToTable("CARRERA", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdEstado");

                    b.ToTable("ESTADO", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Extracurricular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cupo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenEvent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Extracurricular", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Grado", b =>
                {
                    b.Property<int>("IdGrado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGrado"));

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("NombreGrado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdGrado");

                    b.ToTable("GRADO", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Grupo", b =>
                {
                    b.Property<int>("IdGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGrupo"));

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdMaestro")
                        .HasColumnType("int");

                    b.Property<string>("NombreGrupo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdGrupo");

                    b.HasIndex("IdMaestro");

                    b.ToTable("GRUPO", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.HistorialAcademico", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorial"));

                    b.Property<decimal?>("CalificacionFinal")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("EstadoAcademico")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("En Curso");

                    b.Property<int>("IdAlumno")
                        .HasColumnType("int");

                    b.Property<int>("IdMateria")
                        .HasColumnType("int");

                    b.Property<int>("IdPeriodo")
                        .HasColumnType("int");

                    b.HasKey("IdHistorial");

                    b.ToTable("HistorialAcademico", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Maestro", b =>
                {
                    b.Property<int>("IdMaestro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMaestro"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength();

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EstadoMaestro")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Activo");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int");

                    b.Property<int?>("IdTurno")
                        .HasColumnType("int");

                    b.Property<string>("ImageMaestro")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumeroEmpleado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdMaestro");

                    b.HasIndex("NumeroEmpleado")
                        .IsUnique();

                    b.ToTable("MAESTRO", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.MaestroMaterium", b =>
                {
                    b.Property<int>("IdMaestro")
                        .HasColumnType("int");

                    b.Property<int>("IdMateria")
                        .HasColumnType("int");

                    b.HasKey("IdMaestro", "IdMateria");

                    b.ToTable("MaestroMaterias");
                });

            modelBuilder.Entity("APIControlEscolar.Models.Materium", b =>
                {
                    b.Property<int>("IdMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMateria"));

                    b.Property<int>("IdCarrera")
                        .HasColumnType("int");

                    b.Property<int>("IdGrado")
                        .HasColumnType("int");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<int>("IdMaestro")
                        .HasColumnType("int");

                    b.Property<string>("ImageMat")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreMateria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdMateria");

                    b.HasIndex("IdCarrera");

                    b.HasIndex("IdGrado");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdMaestro");

                    b.ToTable("Materium", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Municipio", b =>
                {
                    b.Property<int>("IdMunicipio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMunicipio"));

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdMunicipio");

                    b.ToTable("MUNICIPIO", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Pago", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPago"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("FechaPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdAlumno")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IdPago");

                    b.ToTable("Pago", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Periodo", b =>
                {
                    b.Property<int>("IdPeriodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPeriodo"));

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<string>("NombrePeriodo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdPeriodo");

                    b.ToTable("PERIODO", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdRol");

                    b.ToTable("ROL", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Turno", b =>
                {
                    b.Property<int>("IdTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTurno"));

                    b.Property<TimeOnly>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdTurno");

                    b.ToTable("TURNO", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("Activo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdAlumno")
                        .HasColumnType("int");

                    b.Property<int?>("IdMaestro")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdUsuario")
                        .HasName("PK__USUARIO__5B65BF97056394F7");

                    b.HasIndex(new[] { "IdRol" }, "IX_USUARIO_IdRol");

                    b.HasIndex(new[] { "IdAlumno" }, "UQ__USUARIO__460B47416B50E3D2")
                        .IsUnique()
                        .HasFilter("([IdAlumno] IS NOT NULL)");

                    b.HasIndex(new[] { "IdMaestro" }, "UQ__USUARIO__66B8F1886284146F")
                        .IsUnique()
                        .HasFilter("([IdMaestro] IS NOT NULL)");

                    b.HasIndex(new[] { "Email" }, "UQ__USUARIO__A9D10534C692B840")
                        .IsUnique();

                    b.ToTable("USUARIO", (string)null);
                });

            modelBuilder.Entity("APIControlEscolar.Models.Alumno", b =>
                {
                    b.HasOne("APIControlEscolar.Models.Carrera", null)
                        .WithMany("Alumnos")
                        .HasForeignKey("CarreraIdCarrera");

                    b.HasOne("APIControlEscolar.Models.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("IdCarrera")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("APIControlEscolar.Models.Grado", "Grado")
                        .WithMany()
                        .HasForeignKey("IdGrado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("APIControlEscolar.Models.Grupo", "Grupo")
                        .WithMany("Alumnos")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carrera");

                    b.Navigation("Grado");

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("APIControlEscolar.Models.Asistencia", b =>
                {
                    b.HasOne("APIControlEscolar.Models.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("APIControlEscolar.Models.AsistenciaToken", "AsistenciaToken")
                        .WithMany("AsistenciaList")
                        .HasForeignKey("IdToken")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("AsistenciaToken");
                });

            modelBuilder.Entity("APIControlEscolar.Models.AsistenciaToken", b =>
                {
                    b.HasOne("APIControlEscolar.Models.Maestro", "Maestro")
                        .WithMany()
                        .HasForeignKey("IdMaestro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Maestro");
                });

            modelBuilder.Entity("APIControlEscolar.Models.Grupo", b =>
                {
                    b.HasOne("APIControlEscolar.Models.Maestro", "Maestro")
                        .WithMany("Grupos")
                        .HasForeignKey("IdMaestro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Maestro");
                });

            modelBuilder.Entity("APIControlEscolar.Models.Materium", b =>
                {
                    b.HasOne("APIControlEscolar.Models.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("IdCarrera")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("APIControlEscolar.Models.Grado", "Grado")
                        .WithMany()
                        .HasForeignKey("IdGrado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("APIControlEscolar.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("APIControlEscolar.Models.Maestro", "Maestro")
                        .WithMany()
                        .HasForeignKey("IdMaestro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carrera");

                    b.Navigation("Grado");

                    b.Navigation("Grupo");

                    b.Navigation("Maestro");
                });

            modelBuilder.Entity("APIControlEscolar.Models.Usuario", b =>
                {
                    b.HasOne("APIControlEscolar.Models.Alumno", "IdAlumnoNavigation")
                        .WithOne("Usuario")
                        .HasForeignKey("APIControlEscolar.Models.Usuario", "IdAlumno")
                        .HasConstraintName("FK__USUARIO__IdAlumn__778AC167");

                    b.HasOne("APIControlEscolar.Models.Maestro", "IdMaestroNavigation")
                        .WithOne("Usuario")
                        .HasForeignKey("APIControlEscolar.Models.Usuario", "IdMaestro")
                        .HasConstraintName("FK__USUARIO__IdMaest__787EE5A0");

                    b.HasOne("APIControlEscolar.Models.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .IsRequired()
                        .HasConstraintName("FK__USUARIO__IdRol__76969D2E");

                    b.Navigation("IdAlumnoNavigation");

                    b.Navigation("IdMaestroNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("APIControlEscolar.Models.Alumno", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("APIControlEscolar.Models.AsistenciaToken", b =>
                {
                    b.Navigation("AsistenciaList");
                });

            modelBuilder.Entity("APIControlEscolar.Models.Carrera", b =>
                {
                    b.Navigation("Alumnos");
                });

            modelBuilder.Entity("APIControlEscolar.Models.Grupo", b =>
                {
                    b.Navigation("Alumnos");
                });

            modelBuilder.Entity("APIControlEscolar.Models.Maestro", b =>
                {
                    b.Navigation("Grupos");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("APIControlEscolar.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
